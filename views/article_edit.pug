extends layout 
block style 
    link(rel="stylesheet", href="/stylesheets/tagify.css")
block script 
    script(src="/javascripts/tagify.js")
block content 
    .new-article.article-update
        .assets 
            if assets 
                each asset in assets
                    if asset.type==="img"
                        img(src=asset.url, alt)
            
        form(method="post" action=`/articles/${article.id}/edit`)
            h2=title
            .more-details 
                .created_at Publié le : #[strong !{article.created_at}]
                .last-update Dernière mise à jour : #[strong !{article.last_update}]
            div
                if(article.published == 0)
                    a(href=`/articles/${article.id}/publish?redirect=edit`) Publier
                else 
                    a(href=`/articles/${article.id}/unpublish?redirect=edit`) Cacher

            .input-field
                input(type="text", name="title", placeholder="Donnez un titre à votre article" value = badData ? badData.title : article.title)
                span.error= errors ? errors.title : ''
            .input-field
                input(type="text", name="summary", placeholder="Donnez un résumé de votre article" value = badData ? badData.summary : article.summary)
                span.error=errors ? errors.summary : ''
            .input-field
                input(type="text" id="categories" name="categories" placeholder="Donnez les catégories de votre article" value=badData ? badData.categories : categories)
                span(style="font-size: small;") &nbsp;&nbsp;Séparer les entrées par une virgule (ou tapez sur la touche entrée après chaque catégorie)
                span.error= errors ? errors.categories : ''
            .input-field 
                textarea(name="content", rows="10" cols="15", placeholder="Ecrivez votre article...") !{badData ? badData.content : article.content}
                span.error=errors ? errors.content : ''
            .input-field 
                input(type="submit" value="Poster !")
    script.
        // Using the tagify to get select tags
        const input = document.querySelector(".new-article #categories");
        const categoriesString = "#{all_categories.join()}";
        const list = categoriesString.split(',');
        
        console.log(list)
        const tagify = new Tagify(input, {
            whitelist: list, 
            enforceWhitelist: false,
            dropdown: {
                enabled: 0,
                maxItems: 5,
            }
        });